{
  "ignition": {
    "version": "3.3.0"
  },
  "passwd": {
    "users": [
      {
        "groups": [
          "docker"
        ],
        "name": "core",
        "passwordHash": "$y$j9T$OVO6S5zyKdrnoYOq99WD31$L/mPYI9vAHqTqRDyT6sVjiMVoov/9GVQoKuRoIEPvNA",
        "sshAuthorizedKeys": [
          "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCoPJQAHkfSRIfS05ptesdKwTX7ererHcTZ7pKWi7yUqOQv1e2xpfNBcfx/trwzITJe9N7bwp7t6gpPY2/yBr8F6TenigFWhDaF3Qi9kdSlv64eOsPv6iTg0URH7RE4RQwdArPuwAEBA79BOVoJ0qG/zgn0LOlqYGE/EameYxtgzDJNjXPWOi6OkPKhOEc00+wWGucsCw/8a6rzaMbQHn647yiS7XUJ9/QgMwZ5tqT+Fw/1dxzV4zrWK5MVEXlN5wRZEzukadPQJKyZhhhx3o7MqEVOsTHvyBln6NVJGFawQY7B+ffN/+9n6pEuskWCqngywqAvDXyRS7zD/Dxqv5pjzSQI2fkyuM21oRcKlSYx2AB4L46J6MRJ4ZLA5dhY0fwv868F5VFmJZ2AsDmaGFCqdXTMCv6VRnghJo75oybv+/eoV53NETrTeB4XsPOxSZOHmK93zJzGw2hT4X/ZTvyVbnCyU+Z4sg2iU8ZVE3pHJi8ZQ3hadW0N+CAAmVQ+zsE= nousername"
        ]
      }
    ]
  },
  "storage": {
    "files": [
      {
        "path": "/etc/NetworkManager/system-connections/wired.nmconnection",
        "contents": {
          "compression": "gzip",
          "source": "data:;base64,H4sIAAAAAAAC/0yPUY6rMAxF/72WFx4GSkFVVoL4MLEzjQQOSkJH7H7U6VSq/Gf5+Nw7uagqroSoMwS23yEJw3EEtnU7Ig+4GOILm9Z3g6EOF+PxcnXi5eoWhHLuYqXcJakUoKPEv4dmTyGmUE5rxnGEoEWSJydGaRMruvcZB4Dpzc4AU9gf3QzEnCRntDg2FfZD1WLV1PX/pvv3sUFgzZ8neBuq37nBRqfxFFbrac0Cm5R7ZLuRHrS+NP1LY75EzRZZbC60rPIM/SB3vpFnH/gJAAD///kksWgjAQAA"
        },
        "mode": 384
      },
      {
        "path": "/etc/hostname",
        "contents": {
          "compression": "",
          "source": "data:,coreos%0A"
        },
        "mode": 420
      },
      {
        "path": "/etc/profile.d/systemd-pager.sh",
        "contents": {
          "compression": "",
          "source": "data:,%23%20Tell%20systemd%20to%20not%20use%20a%20pager%20when%20printing%20information%0Aexport%20SYSTEMD_PAGER%3Dcat%0A"
        },
        "mode": 420
      },
      {
        "path": "/etc/sysctl.d/20-silence-audit.conf",
        "contents": {
          "compression": "",
          "source": "data:,%23%20Raise%20console%20message%20logging%20level%20from%20DEBUG%20(7)%20to%20WARNING%20(4)%0A%23%20to%20hide%20audit%20messages%20from%20the%20interactive%20console%0Akernel.printk%3D4%0A"
        },
        "mode": 420
      },
      {
        "overwrite": true,
        "path": "/etc/profile.d/zz-default-editor.sh",
        "contents": {
          "compression": "",
          "source": "data:,export%20EDITOR%3Dvim%0A"
        }
      }
    ]
  },
  "systemd": {
    "units": [
      {
        "contents": "[Unit]\nDescription=Layer vim with rpm-ostree\nWants=network-online.target\nAfter=network-online.target\n# We run before `zincati.service` to avoid conflicting rpm-ostree\n# transactions.\nBefore=zincati.service rpm-ostree-install-docker-compose.service\nConditionPathExists=!/var/lib/%N.stamp\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\n# `--allow-inactive` ensures that rpm-ostree does not return an error\n# if the package is already installed. This is useful if the package is\n# added to the root image in a future Fedora CoreOS release as it will\n# prevent the service from failing.\nExecStart=/usr/bin/rpm-ostree install --apply-live --allow-inactive vim\nExecStart=/bin/touch /var/lib/%N.stamp\n\n[Install]\nWantedBy=multi-user.target\n",
        "enabled": true,
        "name": "rpm-ostree-install-vim.service"
      },
      {
        "contents": "[Unit]\nDescription=Layer docker-compose with rpm-ostree\nWants=network-online.target\nAfter=network-online.target\n# We run before `zincati.service` to avoid conflicting rpm-ostree\n# transactions.\nBefore=zincati.service\nConditionPathExists=!/var/lib/%N.stamp\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\n# `--allow-inactive` ensures that rpm-ostree does not return an error\n# if the package is already installed. This is useful if the package is\n# added to the root image in a future Fedora CoreOS release as it will\n# prevent the service from failing.\nExecStart=/usr/bin/rpm-ostree install --apply-live --allow-inactive docker-compose\nExecStart=/bin/touch /var/lib/%N.stamp\n\n[Install]\nWantedBy=multi-user.target\n",
        "enabled": true,
        "name": "rpm-ostree-install-docker-compose.service"
      },
      {
        "contents": "[Unit]\n# After specifies the execution order because Require does not wait for depndencies to finish execution before starting the current service.\nAfter=NetworkManager-wait-online.service\n# Depend and start another service.\nWants=NetworkManager-wait-online.service\n[Mount]\nWhat=192.168.31.109:/mnt/hdd1tb/shared\nWhere=/var/mnt/shared\nType=nfs\nOptions=_netdev,auto\n[Install]\nWantedBy=local-fs.target\n",
        "enabled": true,
        "name": "var-mnt-shared.mount"
      },
      {
        "contents": "[Unit]\nDescription=Portainer Admin Container\nAfter=docker.service var-mnt-shared.mount\nRequires=docker.service network.target network-online.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nTimeoutStartSec=0\nExecStartPre=-/usr/bin/docker stop %n\nExecStartPre=-/usr/bin/docker rm %n\nExecStartPre=/usr/bin/docker pull portainer/portainer-ce:latest\nExecStart=-/usr/bin/mkdir -p /mnt/shared_nfs/portainer_data\n# Privileged mode is required for binding to local socket to work due to SELINUX (https://github.com/portainer/portainer/issues/849)\nExecStart=/usr/bin/docker run \\\n  --privileged=true \\\n  -d \\\n  -p 9000:9000 \\\n  --name %n \\\n  --restart always \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v /mnt/shared/apps-volume/docker/portainer:/data \\\n  portainer/portainer-ce:latest \\\n    --templates https://raw.githubusercontent.com/UnconventionalMindset/portainer/main/template.json \\\n    --admin-password-file /data/.secrets/portainer_pass\nExecStop=/usr/bin/docker stop -t 15 %n\n\n[Install]\nWantedBy=multi-user.target",
        "enabled": true,
        "name": "docker.portainer.service"
      },
      {
        "dropins": [
          {
            "contents": "[Service]\n# Override Execstart in main unit\nExecStart=\n# Add new Execstart with `-` prefix to ignore failure\nExecStart=-/usr/sbin/agetty --autologin core --noclear %I $TERM\nTTYVTDisallocate=no\n",
            "name": "autologin-core.conf"
          }
        ],
        "name": "serial-getty@ttyS0.service"
      },
      {
        "contents": "[Service]\nType=oneshot\nExecStart=/usr/bin/false\nRemainAfterExit=yes\n\n[Install]\nWantedBy=multi-user.target\n",
        "enabled": true,
        "name": "failure.service"
      },
      {
        "contents": "[Unit]\nDescription=Run a single node etcd\nAfter=network-online.target\nWants=network-online.target\n\n[Service]\nExecStartPre=mkdir -p /var/lib/etcd\nExecStartPre=-/bin/podman kill etcd\nExecStartPre=-/bin/podman rm etcd\nExecStartPre=-/bin/podman pull quay.io/coreos/etcd\nExecStart=/bin/podman run --name etcd --net=host \\\n            --volume /var/lib/etcd:/etcd-data:z  \\\n            quay.io/coreos/etcd:latest /usr/local/bin/etcd              \\\n                    --data-dir /etcd-data --name node1                  \\\n                    --initial-advertise-peer-urls http://127.0.0.1:2380 \\\n                    --listen-peer-urls http://127.0.0.1:2380            \\\n                    --advertise-client-urls http://127.0.0.1:2379       \\\n                    --listen-client-urls http://127.0.0.1:2379          \\\n                    --initial-cluster node1=http://127.0.0.1:2380\nExecStop=/bin/podman stop etcd\n\n[Install]\nWantedBy=multi-user.target\n",
        "enabled": true,
        "name": "etcd-member.service"
      }
    ]
  }
}
