variant: fcos
version: 1.4.0
storage:
  files:
    - path: /var/home/core/download-apps-docker-composes.sh
      overwrite: true
      contents:
        inline: |
          #!/usr/bin/bash
          git clone --filter=blob:none --branch dev --no-checkout --depth 1 --sparse https://github.com/UnconventionalMindset/coreos-setup.git /var/home/core/coreos-setup
          cd /var/home/core/coreos-setup
          git sparse-checkout set apps
          git checkout
          mkdir /etc/docker/compose/
          mv /var/home/core/coreos-setup/apps/* /etc/docker/compose/
          rm -rf /var/home/core/coreos-setup
    - path: /var/home/core/deploy-stack.sh
      overwrite: true
      contents:
        inline: |
          #!/usr/bin/bash
          composes=($(ls /etc/docker/compose/))
          for (( i = 0; i < ${#composes[@]} ; i++ )); do
            systemctl start docker-compose@${composes[$i]}
          done

systemd:
  units:
    - name: download-apps-docker-composes.service
      enabled: true
      contents: |
        [Unit]
        Description=Downloads apps docker composes
        Wants=network-online.target
        After=network-online.target
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/bash /var/home/core/download-apps-docker-composes.sh
        ExecStart=/bin/touch /var/lib/%N.stamp

        [Install]
        WantedBy=multi-user.target
    - name: docker-compose@.service
      contents: |
        [Unit]
        Description=%i service with docker compose
        PartOf=docker.service
        Wants=network-online.target docker.service rpm-ostree-install-docker-compose.service
        After=network-online.target rpm-ostree-install-docker-compose.service
        
        [Service]
        Type=oneshot
        RemainAfterExit=true
        WorkingDirectory=/etc/docker/compose/%i
        ExecStart=/usr/bin/docker-compose up -d --remove-orphans
        ExecStop=/usr/bin/docker-compose down

        [Install]
        WantedBy=multi-user.target
    - name: deploy-stack.service
      enabled: true
      contents: |
        [Unit]
        Description=Deploy stack with docker compose
        Wants=network-online.target docker.service rpm-ostree-install-docker-compose.service download-apps-docker-composes.service
        After=network-online.target rpm-ostree-install-docker-compose.service download-apps-docker-composes.service
        
        [Service]
        Type=oneshot
        RemainAfterExit=true
        ExecStart=/usr/bin/bash /var/home/core/deploy-stack.sh

        [Install]
        WantedBy=multi-user.target
    - name: docker.portainer.service
      enabled: true
      contents: |-
        [Unit]
        Description=Portainer Admin Container
        After=docker.service var-mnt-shared.mount
        Requires=docker.service network.target network-online.target

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        TimeoutStartSec=0
        ExecStartPre=-/usr/bin/docker stop %n
        ExecStartPre=-/usr/bin/docker rm %n
        ExecStartPre=/usr/bin/docker pull portainer/portainer-ce:latest
        ExecStart=-/usr/bin/mkdir -p /mnt/shared/apps/docker/portainer
        # Privileged mode is required for binding to local socket to work due to SELINUX (https://github.com/portainer/portainer/issues/849)
        ExecStart=/usr/bin/docker run \
          --privileged=true \
          -d \
          -p 9000:9000 \
          --name %n \
          --restart always \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v /mnt/shared/apps/docker/portainer:/data \
          portainer/portainer-ce:latest \
            --templates https://raw.githubusercontent.com/UnconventionalMindset/portainer/main/template.json \
            --admin-password-file /data/.secrets/portainer_pass
        ExecStop=/usr/bin/docker stop -t 15 %n

        [Install]
        WantedBy=multi-user.target
